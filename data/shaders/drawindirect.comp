#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shader_atomic_counters : enable

layout(push_constant) uniform PushConstants {
    mat4 projection;
    mat4 modelView;
} pc;

layout(std140, set = 0, binding = 0) buffer Positions
{
  vec4 positions[];
};

layout(set = 0, binding = 1) uniform ComputeScale {
    vec4 scale;
};

struct DrawIndirectCommand
{
    uint vertexCount;
    uint instanceCount;
    uint firstVertex;
    uint firstInstance;
};

layout(std140, set = 0, binding = 2) buffer DrawBuffer
{
	DrawIndirectCommand draws[];
} drawBuffer;

layout (local_size_x = 4) in;
layout (local_size_y = 4) in;

void main()
{
  uint i = gl_GlobalInvocationID.x;
  uint j = gl_GlobalInvocationID.y;
  float x = float(i) / 15 - 0.5;
  float y = float(j) / 15 - 0.5;
  float z = (0.25 * sin(2.0 * 3.14 * x) + 0.25 * cos(2.0 * 3.14 * y));

  vec4 vertex = vec4(x, y, z, 1) * scale;

  vec3 eyePos = vec4(pc.modelView * vertex).xyz;
  float distance = -eyePos.z;
  if (distance < 3.0)
  {
    positions[atomicAdd(drawBuffer.draws[0].vertexCount, 1)] = vertex;
  }
}
